/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fsoft.bn.model.impl;

import com.fsoft.bn.model.RecruitmentEducationalHistory;
import com.fsoft.bn.model.RecruitmentEducationalHistoryModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RecruitmentEducationalHistory service. Represents a row in the &quot;BN_RecruitmentEducationalHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.fsoft.bn.model.RecruitmentEducationalHistoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RecruitmentEducationalHistoryImpl}.
 * </p>
 *
 * @author FSOFT
 * @see RecruitmentEducationalHistoryImpl
 * @see com.fsoft.bn.model.RecruitmentEducationalHistory
 * @see com.fsoft.bn.model.RecruitmentEducationalHistoryModel
 * @generated
 */
public class RecruitmentEducationalHistoryModelImpl extends BaseModelImpl<RecruitmentEducationalHistory>
	implements RecruitmentEducationalHistoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a recruitment educational history model instance should use the {@link com.fsoft.bn.model.RecruitmentEducationalHistory} interface instead.
	 */
	public static final String TABLE_NAME = "BN_RecruitmentEducationalHistory";
	public static final Object[][] TABLE_COLUMNS = {
			{ "recruitment_educational_history_id", Types.VARCHAR },
			{ "recruitment_id", Types.VARCHAR },
			{ "school", Types.VARCHAR },
			{ "typeOfTraining", Types.VARCHAR },
			{ "speciality", Types.VARCHAR },
			{ "typeOfDegree", Types.VARCHAR },
			{ "graduatedYear", Types.VARCHAR },
			{ "created_date", Types.TIMESTAMP },
			{ "modified_date", Types.TIMESTAMP },
			{ "deleted", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table BN_RecruitmentEducationalHistory (recruitment_educational_history_id VARCHAR(75) not null primary key,recruitment_id VARCHAR(75) null,school VARCHAR(75) null,typeOfTraining VARCHAR(75) null,speciality VARCHAR(75) null,typeOfDegree VARCHAR(75) null,graduatedYear VARCHAR(75) null,created_date DATE null,modified_date DATE null,deleted BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table BN_RecruitmentEducationalHistory";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fsoft.bn.model.RecruitmentEducationalHistory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fsoft.bn.model.RecruitmentEducationalHistory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.fsoft.bn.model.RecruitmentEducationalHistory"));

	public RecruitmentEducationalHistoryModelImpl() {
	}

	public String getPrimaryKey() {
		return _recruitment_educational_history_id;
	}

	public void setPrimaryKey(String primaryKey) {
		setRecruitment_educational_history_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return _recruitment_educational_history_id;
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	public Class<?> getModelClass() {
		return RecruitmentEducationalHistory.class;
	}

	public String getModelClassName() {
		return RecruitmentEducationalHistory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("recruitment_educational_history_id",
			getRecruitment_educational_history_id());
		attributes.put("recruitment_id", getRecruitment_id());
		attributes.put("school", getSchool());
		attributes.put("typeOfTraining", getTypeOfTraining());
		attributes.put("speciality", getSpeciality());
		attributes.put("typeOfDegree", getTypeOfDegree());
		attributes.put("graduatedYear", getGraduatedYear());
		attributes.put("created_date", getCreated_date());
		attributes.put("modified_date", getModified_date());
		attributes.put("deleted", getDeleted());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String recruitment_educational_history_id = (String)attributes.get(
				"recruitment_educational_history_id");

		if (recruitment_educational_history_id != null) {
			setRecruitment_educational_history_id(recruitment_educational_history_id);
		}

		String recruitment_id = (String)attributes.get("recruitment_id");

		if (recruitment_id != null) {
			setRecruitment_id(recruitment_id);
		}

		String school = (String)attributes.get("school");

		if (school != null) {
			setSchool(school);
		}

		String typeOfTraining = (String)attributes.get("typeOfTraining");

		if (typeOfTraining != null) {
			setTypeOfTraining(typeOfTraining);
		}

		String speciality = (String)attributes.get("speciality");

		if (speciality != null) {
			setSpeciality(speciality);
		}

		String typeOfDegree = (String)attributes.get("typeOfDegree");

		if (typeOfDegree != null) {
			setTypeOfDegree(typeOfDegree);
		}

		String graduatedYear = (String)attributes.get("graduatedYear");

		if (graduatedYear != null) {
			setGraduatedYear(graduatedYear);
		}

		Date created_date = (Date)attributes.get("created_date");

		if (created_date != null) {
			setCreated_date(created_date);
		}

		Date modified_date = (Date)attributes.get("modified_date");

		if (modified_date != null) {
			setModified_date(modified_date);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}
	}

	public String getRecruitment_educational_history_id() {
		if (_recruitment_educational_history_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _recruitment_educational_history_id;
		}
	}

	public void setRecruitment_educational_history_id(
		String recruitment_educational_history_id) {
		_recruitment_educational_history_id = recruitment_educational_history_id;
	}

	public String getRecruitment_id() {
		if (_recruitment_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _recruitment_id;
		}
	}

	public void setRecruitment_id(String recruitment_id) {
		_recruitment_id = recruitment_id;
	}

	public String getSchool() {
		if (_school == null) {
			return StringPool.BLANK;
		}
		else {
			return _school;
		}
	}

	public void setSchool(String school) {
		_school = school;
	}

	public String getTypeOfTraining() {
		if (_typeOfTraining == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeOfTraining;
		}
	}

	public void setTypeOfTraining(String typeOfTraining) {
		_typeOfTraining = typeOfTraining;
	}

	public String getSpeciality() {
		if (_speciality == null) {
			return StringPool.BLANK;
		}
		else {
			return _speciality;
		}
	}

	public void setSpeciality(String speciality) {
		_speciality = speciality;
	}

	public String getTypeOfDegree() {
		if (_typeOfDegree == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeOfDegree;
		}
	}

	public void setTypeOfDegree(String typeOfDegree) {
		_typeOfDegree = typeOfDegree;
	}

	public String getGraduatedYear() {
		if (_graduatedYear == null) {
			return StringPool.BLANK;
		}
		else {
			return _graduatedYear;
		}
	}

	public void setGraduatedYear(String graduatedYear) {
		_graduatedYear = graduatedYear;
	}

	public Date getCreated_date() {
		return _created_date;
	}

	public void setCreated_date(Date created_date) {
		_created_date = created_date;
	}

	public Date getModified_date() {
		return _modified_date;
	}

	public void setModified_date(Date modified_date) {
		_modified_date = modified_date;
	}

	public boolean getDeleted() {
		return _deleted;
	}

	public boolean isDeleted() {
		return _deleted;
	}

	public void setDeleted(boolean deleted) {
		_deleted = deleted;
	}

	@Override
	public RecruitmentEducationalHistory toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (RecruitmentEducationalHistory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		RecruitmentEducationalHistoryImpl recruitmentEducationalHistoryImpl = new RecruitmentEducationalHistoryImpl();

		recruitmentEducationalHistoryImpl.setRecruitment_educational_history_id(getRecruitment_educational_history_id());
		recruitmentEducationalHistoryImpl.setRecruitment_id(getRecruitment_id());
		recruitmentEducationalHistoryImpl.setSchool(getSchool());
		recruitmentEducationalHistoryImpl.setTypeOfTraining(getTypeOfTraining());
		recruitmentEducationalHistoryImpl.setSpeciality(getSpeciality());
		recruitmentEducationalHistoryImpl.setTypeOfDegree(getTypeOfDegree());
		recruitmentEducationalHistoryImpl.setGraduatedYear(getGraduatedYear());
		recruitmentEducationalHistoryImpl.setCreated_date(getCreated_date());
		recruitmentEducationalHistoryImpl.setModified_date(getModified_date());
		recruitmentEducationalHistoryImpl.setDeleted(getDeleted());

		recruitmentEducationalHistoryImpl.resetOriginalValues();

		return recruitmentEducationalHistoryImpl;
	}

	public int compareTo(
		RecruitmentEducationalHistory recruitmentEducationalHistory) {
		String primaryKey = recruitmentEducationalHistory.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		RecruitmentEducationalHistory recruitmentEducationalHistory = null;

		try {
			recruitmentEducationalHistory = (RecruitmentEducationalHistory)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String primaryKey = recruitmentEducationalHistory.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RecruitmentEducationalHistory> toCacheModel() {
		RecruitmentEducationalHistoryCacheModel recruitmentEducationalHistoryCacheModel =
			new RecruitmentEducationalHistoryCacheModel();

		recruitmentEducationalHistoryCacheModel.recruitment_educational_history_id = getRecruitment_educational_history_id();

		String recruitment_educational_history_id = recruitmentEducationalHistoryCacheModel.recruitment_educational_history_id;

		if ((recruitment_educational_history_id != null) &&
				(recruitment_educational_history_id.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.recruitment_educational_history_id = null;
		}

		recruitmentEducationalHistoryCacheModel.recruitment_id = getRecruitment_id();

		String recruitment_id = recruitmentEducationalHistoryCacheModel.recruitment_id;

		if ((recruitment_id != null) && (recruitment_id.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.recruitment_id = null;
		}

		recruitmentEducationalHistoryCacheModel.school = getSchool();

		String school = recruitmentEducationalHistoryCacheModel.school;

		if ((school != null) && (school.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.school = null;
		}

		recruitmentEducationalHistoryCacheModel.typeOfTraining = getTypeOfTraining();

		String typeOfTraining = recruitmentEducationalHistoryCacheModel.typeOfTraining;

		if ((typeOfTraining != null) && (typeOfTraining.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.typeOfTraining = null;
		}

		recruitmentEducationalHistoryCacheModel.speciality = getSpeciality();

		String speciality = recruitmentEducationalHistoryCacheModel.speciality;

		if ((speciality != null) && (speciality.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.speciality = null;
		}

		recruitmentEducationalHistoryCacheModel.typeOfDegree = getTypeOfDegree();

		String typeOfDegree = recruitmentEducationalHistoryCacheModel.typeOfDegree;

		if ((typeOfDegree != null) && (typeOfDegree.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.typeOfDegree = null;
		}

		recruitmentEducationalHistoryCacheModel.graduatedYear = getGraduatedYear();

		String graduatedYear = recruitmentEducationalHistoryCacheModel.graduatedYear;

		if ((graduatedYear != null) && (graduatedYear.length() == 0)) {
			recruitmentEducationalHistoryCacheModel.graduatedYear = null;
		}

		Date created_date = getCreated_date();

		if (created_date != null) {
			recruitmentEducationalHistoryCacheModel.created_date = created_date.getTime();
		}
		else {
			recruitmentEducationalHistoryCacheModel.created_date = Long.MIN_VALUE;
		}

		Date modified_date = getModified_date();

		if (modified_date != null) {
			recruitmentEducationalHistoryCacheModel.modified_date = modified_date.getTime();
		}
		else {
			recruitmentEducationalHistoryCacheModel.modified_date = Long.MIN_VALUE;
		}

		recruitmentEducationalHistoryCacheModel.deleted = getDeleted();

		return recruitmentEducationalHistoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{recruitment_educational_history_id=");
		sb.append(getRecruitment_educational_history_id());
		sb.append(", recruitment_id=");
		sb.append(getRecruitment_id());
		sb.append(", school=");
		sb.append(getSchool());
		sb.append(", typeOfTraining=");
		sb.append(getTypeOfTraining());
		sb.append(", speciality=");
		sb.append(getSpeciality());
		sb.append(", typeOfDegree=");
		sb.append(getTypeOfDegree());
		sb.append(", graduatedYear=");
		sb.append(getGraduatedYear());
		sb.append(", created_date=");
		sb.append(getCreated_date());
		sb.append(", modified_date=");
		sb.append(getModified_date());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.fsoft.bn.model.RecruitmentEducationalHistory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>recruitment_educational_history_id</column-name><column-value><![CDATA[");
		sb.append(getRecruitment_educational_history_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recruitment_id</column-name><column-value><![CDATA[");
		sb.append(getRecruitment_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>school</column-name><column-value><![CDATA[");
		sb.append(getSchool());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeOfTraining</column-name><column-value><![CDATA[");
		sb.append(getTypeOfTraining());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>speciality</column-name><column-value><![CDATA[");
		sb.append(getSpeciality());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeOfDegree</column-name><column-value><![CDATA[");
		sb.append(getTypeOfDegree());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>graduatedYear</column-name><column-value><![CDATA[");
		sb.append(getGraduatedYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>created_date</column-name><column-value><![CDATA[");
		sb.append(getCreated_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modified_date</column-name><column-value><![CDATA[");
		sb.append(getModified_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RecruitmentEducationalHistory.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			RecruitmentEducationalHistory.class
		};
	private String _recruitment_educational_history_id;
	private String _recruitment_id;
	private String _school;
	private String _typeOfTraining;
	private String _speciality;
	private String _typeOfDegree;
	private String _graduatedYear;
	private Date _created_date;
	private Date _modified_date;
	private boolean _deleted;
	private RecruitmentEducationalHistory _escapedModelProxy;
}