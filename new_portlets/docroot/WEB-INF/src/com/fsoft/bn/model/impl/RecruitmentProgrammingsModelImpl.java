/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fsoft.bn.model.impl;

import com.fsoft.bn.model.RecruitmentProgrammings;
import com.fsoft.bn.model.RecruitmentProgrammingsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RecruitmentProgrammings service. Represents a row in the &quot;BN_RecruitmentProgrammings&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.fsoft.bn.model.RecruitmentProgrammingsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RecruitmentProgrammingsImpl}.
 * </p>
 *
 * @author FSOFT
 * @see RecruitmentProgrammingsImpl
 * @see com.fsoft.bn.model.RecruitmentProgrammings
 * @see com.fsoft.bn.model.RecruitmentProgrammingsModel
 * @generated
 */
public class RecruitmentProgrammingsModelImpl extends BaseModelImpl<RecruitmentProgrammings>
	implements RecruitmentProgrammingsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a recruitment programmings model instance should use the {@link com.fsoft.bn.model.RecruitmentProgrammings} interface instead.
	 */
	public static final String TABLE_NAME = "BN_RecruitmentProgrammings";
	public static final Object[][] TABLE_COLUMNS = {
			{ "recruitment_programmings_id", Types.VARCHAR },
			{ "recruitment_id", Types.VARCHAR },
			{ "course", Types.VARCHAR },
			{ "level", Types.VARCHAR },
			{ "certificate", Types.VARCHAR },
			{ "created_date", Types.TIMESTAMP },
			{ "modified_date", Types.TIMESTAMP },
			{ "deleted", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table BN_RecruitmentProgrammings (recruitment_programmings_id VARCHAR(75) not null primary key,recruitment_id VARCHAR(75) null,course VARCHAR(75) null,level VARCHAR(75) null,certificate VARCHAR(75) null,created_date DATE null,modified_date DATE null,deleted BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table BN_RecruitmentProgrammings";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fsoft.bn.model.RecruitmentProgrammings"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fsoft.bn.model.RecruitmentProgrammings"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.fsoft.bn.model.RecruitmentProgrammings"));

	public RecruitmentProgrammingsModelImpl() {
	}

	public String getPrimaryKey() {
		return _recruitment_programmings_id;
	}

	public void setPrimaryKey(String primaryKey) {
		setRecruitment_programmings_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return _recruitment_programmings_id;
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	public Class<?> getModelClass() {
		return RecruitmentProgrammings.class;
	}

	public String getModelClassName() {
		return RecruitmentProgrammings.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("recruitment_programmings_id",
			getRecruitment_programmings_id());
		attributes.put("recruitment_id", getRecruitment_id());
		attributes.put("course", getCourse());
		attributes.put("level", getLevel());
		attributes.put("certificate", getCertificate());
		attributes.put("created_date", getCreated_date());
		attributes.put("modified_date", getModified_date());
		attributes.put("deleted", getDeleted());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String recruitment_programmings_id = (String)attributes.get(
				"recruitment_programmings_id");

		if (recruitment_programmings_id != null) {
			setRecruitment_programmings_id(recruitment_programmings_id);
		}

		String recruitment_id = (String)attributes.get("recruitment_id");

		if (recruitment_id != null) {
			setRecruitment_id(recruitment_id);
		}

		String course = (String)attributes.get("course");

		if (course != null) {
			setCourse(course);
		}

		String level = (String)attributes.get("level");

		if (level != null) {
			setLevel(level);
		}

		String certificate = (String)attributes.get("certificate");

		if (certificate != null) {
			setCertificate(certificate);
		}

		Date created_date = (Date)attributes.get("created_date");

		if (created_date != null) {
			setCreated_date(created_date);
		}

		Date modified_date = (Date)attributes.get("modified_date");

		if (modified_date != null) {
			setModified_date(modified_date);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}
	}

	public String getRecruitment_programmings_id() {
		if (_recruitment_programmings_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _recruitment_programmings_id;
		}
	}

	public void setRecruitment_programmings_id(
		String recruitment_programmings_id) {
		_recruitment_programmings_id = recruitment_programmings_id;
	}

	public String getRecruitment_id() {
		if (_recruitment_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _recruitment_id;
		}
	}

	public void setRecruitment_id(String recruitment_id) {
		_recruitment_id = recruitment_id;
	}

	public String getCourse() {
		if (_course == null) {
			return StringPool.BLANK;
		}
		else {
			return _course;
		}
	}

	public void setCourse(String course) {
		_course = course;
	}

	public String getLevel() {
		if (_level == null) {
			return StringPool.BLANK;
		}
		else {
			return _level;
		}
	}

	public void setLevel(String level) {
		_level = level;
	}

	public String getCertificate() {
		if (_certificate == null) {
			return StringPool.BLANK;
		}
		else {
			return _certificate;
		}
	}

	public void setCertificate(String certificate) {
		_certificate = certificate;
	}

	public Date getCreated_date() {
		return _created_date;
	}

	public void setCreated_date(Date created_date) {
		_created_date = created_date;
	}

	public Date getModified_date() {
		return _modified_date;
	}

	public void setModified_date(Date modified_date) {
		_modified_date = modified_date;
	}

	public boolean getDeleted() {
		return _deleted;
	}

	public boolean isDeleted() {
		return _deleted;
	}

	public void setDeleted(boolean deleted) {
		_deleted = deleted;
	}

	@Override
	public RecruitmentProgrammings toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (RecruitmentProgrammings)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		RecruitmentProgrammingsImpl recruitmentProgrammingsImpl = new RecruitmentProgrammingsImpl();

		recruitmentProgrammingsImpl.setRecruitment_programmings_id(getRecruitment_programmings_id());
		recruitmentProgrammingsImpl.setRecruitment_id(getRecruitment_id());
		recruitmentProgrammingsImpl.setCourse(getCourse());
		recruitmentProgrammingsImpl.setLevel(getLevel());
		recruitmentProgrammingsImpl.setCertificate(getCertificate());
		recruitmentProgrammingsImpl.setCreated_date(getCreated_date());
		recruitmentProgrammingsImpl.setModified_date(getModified_date());
		recruitmentProgrammingsImpl.setDeleted(getDeleted());

		recruitmentProgrammingsImpl.resetOriginalValues();

		return recruitmentProgrammingsImpl;
	}

	public int compareTo(RecruitmentProgrammings recruitmentProgrammings) {
		String primaryKey = recruitmentProgrammings.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		RecruitmentProgrammings recruitmentProgrammings = null;

		try {
			recruitmentProgrammings = (RecruitmentProgrammings)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String primaryKey = recruitmentProgrammings.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RecruitmentProgrammings> toCacheModel() {
		RecruitmentProgrammingsCacheModel recruitmentProgrammingsCacheModel = new RecruitmentProgrammingsCacheModel();

		recruitmentProgrammingsCacheModel.recruitment_programmings_id = getRecruitment_programmings_id();

		String recruitment_programmings_id = recruitmentProgrammingsCacheModel.recruitment_programmings_id;

		if ((recruitment_programmings_id != null) &&
				(recruitment_programmings_id.length() == 0)) {
			recruitmentProgrammingsCacheModel.recruitment_programmings_id = null;
		}

		recruitmentProgrammingsCacheModel.recruitment_id = getRecruitment_id();

		String recruitment_id = recruitmentProgrammingsCacheModel.recruitment_id;

		if ((recruitment_id != null) && (recruitment_id.length() == 0)) {
			recruitmentProgrammingsCacheModel.recruitment_id = null;
		}

		recruitmentProgrammingsCacheModel.course = getCourse();

		String course = recruitmentProgrammingsCacheModel.course;

		if ((course != null) && (course.length() == 0)) {
			recruitmentProgrammingsCacheModel.course = null;
		}

		recruitmentProgrammingsCacheModel.level = getLevel();

		String level = recruitmentProgrammingsCacheModel.level;

		if ((level != null) && (level.length() == 0)) {
			recruitmentProgrammingsCacheModel.level = null;
		}

		recruitmentProgrammingsCacheModel.certificate = getCertificate();

		String certificate = recruitmentProgrammingsCacheModel.certificate;

		if ((certificate != null) && (certificate.length() == 0)) {
			recruitmentProgrammingsCacheModel.certificate = null;
		}

		Date created_date = getCreated_date();

		if (created_date != null) {
			recruitmentProgrammingsCacheModel.created_date = created_date.getTime();
		}
		else {
			recruitmentProgrammingsCacheModel.created_date = Long.MIN_VALUE;
		}

		Date modified_date = getModified_date();

		if (modified_date != null) {
			recruitmentProgrammingsCacheModel.modified_date = modified_date.getTime();
		}
		else {
			recruitmentProgrammingsCacheModel.modified_date = Long.MIN_VALUE;
		}

		recruitmentProgrammingsCacheModel.deleted = getDeleted();

		return recruitmentProgrammingsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{recruitment_programmings_id=");
		sb.append(getRecruitment_programmings_id());
		sb.append(", recruitment_id=");
		sb.append(getRecruitment_id());
		sb.append(", course=");
		sb.append(getCourse());
		sb.append(", level=");
		sb.append(getLevel());
		sb.append(", certificate=");
		sb.append(getCertificate());
		sb.append(", created_date=");
		sb.append(getCreated_date());
		sb.append(", modified_date=");
		sb.append(getModified_date());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.fsoft.bn.model.RecruitmentProgrammings");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>recruitment_programmings_id</column-name><column-value><![CDATA[");
		sb.append(getRecruitment_programmings_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recruitment_id</column-name><column-value><![CDATA[");
		sb.append(getRecruitment_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>course</column-name><column-value><![CDATA[");
		sb.append(getCourse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificate</column-name><column-value><![CDATA[");
		sb.append(getCertificate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>created_date</column-name><column-value><![CDATA[");
		sb.append(getCreated_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modified_date</column-name><column-value><![CDATA[");
		sb.append(getModified_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RecruitmentProgrammings.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			RecruitmentProgrammings.class
		};
	private String _recruitment_programmings_id;
	private String _recruitment_id;
	private String _course;
	private String _level;
	private String _certificate;
	private Date _created_date;
	private Date _modified_date;
	private boolean _deleted;
	private RecruitmentProgrammings _escapedModelProxy;
}