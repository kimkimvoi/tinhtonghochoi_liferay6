/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fsoft.bn.model.impl;

import com.fsoft.bn.model.PreschoolStudent;
import com.fsoft.bn.model.PreschoolStudentModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PreschoolStudent service. Represents a row in the &quot;BN_PreschoolStudent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.fsoft.bn.model.PreschoolStudentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PreschoolStudentImpl}.
 * </p>
 *
 * @author FSOFT
 * @see PreschoolStudentImpl
 * @see com.fsoft.bn.model.PreschoolStudent
 * @see com.fsoft.bn.model.PreschoolStudentModel
 * @generated
 */
public class PreschoolStudentModelImpl extends BaseModelImpl<PreschoolStudent>
	implements PreschoolStudentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a preschool student model instance should use the {@link com.fsoft.bn.model.PreschoolStudent} interface instead.
	 */
	public static final String TABLE_NAME = "BN_PreschoolStudent";
	public static final Object[][] TABLE_COLUMNS = {
			{ "student_id", Types.VARCHAR },
			{ "student_name", Types.VARCHAR },
			{ "student_sex", Types.VARCHAR },
			{ "student_dob", Types.VARCHAR },
			{ "student_placeOfBirth", Types.VARCHAR },
			{ "student_nationality", Types.VARCHAR },
			{ "student_phoneNumber", Types.VARCHAR },
			{ "student_address", Types.VARCHAR },
			{ "student_heatlhStatus", Types.VARCHAR },
			{ "student_height", Types.VARCHAR },
			{ "student_weight", Types.VARCHAR },
			{ "student_contactName", Types.VARCHAR },
			{ "student_contactRelationship", Types.VARCHAR },
			{ "student_contactPhoneNumber", Types.VARCHAR },
			{ "student_contactEmail", Types.VARCHAR },
			{ "student_howToKnowBM", Types.VARCHAR },
			{ "student_whoIntroduce", Types.VARCHAR },
			{ "student_anyConfuse", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "created_date", Types.TIMESTAMP },
			{ "modified_date", Types.TIMESTAMP },
			{ "deleted", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table BN_PreschoolStudent (student_id VARCHAR(75) not null primary key,student_name VARCHAR(75) null,student_sex VARCHAR(75) null,student_dob VARCHAR(75) null,student_placeOfBirth VARCHAR(75) null,student_nationality VARCHAR(75) null,student_phoneNumber VARCHAR(75) null,student_address VARCHAR(75) null,student_heatlhStatus VARCHAR(75) null,student_height VARCHAR(75) null,student_weight VARCHAR(75) null,student_contactName VARCHAR(75) null,student_contactRelationship VARCHAR(75) null,student_contactPhoneNumber VARCHAR(75) null,student_contactEmail VARCHAR(75) null,student_howToKnowBM VARCHAR(75) null,student_whoIntroduce VARCHAR(75) null,student_anyConfuse VARCHAR(75) null,status VARCHAR(75) null,created_date DATE null,modified_date DATE null,deleted BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table BN_PreschoolStudent";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fsoft.bn.model.PreschoolStudent"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fsoft.bn.model.PreschoolStudent"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.fsoft.bn.model.PreschoolStudent"));

	public PreschoolStudentModelImpl() {
	}

	public String getPrimaryKey() {
		return _student_id;
	}

	public void setPrimaryKey(String primaryKey) {
		setStudent_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return _student_id;
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	public Class<?> getModelClass() {
		return PreschoolStudent.class;
	}

	public String getModelClassName() {
		return PreschoolStudent.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("student_id", getStudent_id());
		attributes.put("student_name", getStudent_name());
		attributes.put("student_sex", getStudent_sex());
		attributes.put("student_dob", getStudent_dob());
		attributes.put("student_placeOfBirth", getStudent_placeOfBirth());
		attributes.put("student_nationality", getStudent_nationality());
		attributes.put("student_phoneNumber", getStudent_phoneNumber());
		attributes.put("student_address", getStudent_address());
		attributes.put("student_heatlhStatus", getStudent_heatlhStatus());
		attributes.put("student_height", getStudent_height());
		attributes.put("student_weight", getStudent_weight());
		attributes.put("student_contactName", getStudent_contactName());
		attributes.put("student_contactRelationship",
			getStudent_contactRelationship());
		attributes.put("student_contactPhoneNumber",
			getStudent_contactPhoneNumber());
		attributes.put("student_contactEmail", getStudent_contactEmail());
		attributes.put("student_howToKnowBM", getStudent_howToKnowBM());
		attributes.put("student_whoIntroduce", getStudent_whoIntroduce());
		attributes.put("student_anyConfuse", getStudent_anyConfuse());
		attributes.put("status", getStatus());
		attributes.put("created_date", getCreated_date());
		attributes.put("modified_date", getModified_date());
		attributes.put("deleted", getDeleted());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String student_id = (String)attributes.get("student_id");

		if (student_id != null) {
			setStudent_id(student_id);
		}

		String student_name = (String)attributes.get("student_name");

		if (student_name != null) {
			setStudent_name(student_name);
		}

		String student_sex = (String)attributes.get("student_sex");

		if (student_sex != null) {
			setStudent_sex(student_sex);
		}

		String student_dob = (String)attributes.get("student_dob");

		if (student_dob != null) {
			setStudent_dob(student_dob);
		}

		String student_placeOfBirth = (String)attributes.get(
				"student_placeOfBirth");

		if (student_placeOfBirth != null) {
			setStudent_placeOfBirth(student_placeOfBirth);
		}

		String student_nationality = (String)attributes.get(
				"student_nationality");

		if (student_nationality != null) {
			setStudent_nationality(student_nationality);
		}

		String student_phoneNumber = (String)attributes.get(
				"student_phoneNumber");

		if (student_phoneNumber != null) {
			setStudent_phoneNumber(student_phoneNumber);
		}

		String student_address = (String)attributes.get("student_address");

		if (student_address != null) {
			setStudent_address(student_address);
		}

		String student_heatlhStatus = (String)attributes.get(
				"student_heatlhStatus");

		if (student_heatlhStatus != null) {
			setStudent_heatlhStatus(student_heatlhStatus);
		}

		String student_height = (String)attributes.get("student_height");

		if (student_height != null) {
			setStudent_height(student_height);
		}

		String student_weight = (String)attributes.get("student_weight");

		if (student_weight != null) {
			setStudent_weight(student_weight);
		}

		String student_contactName = (String)attributes.get(
				"student_contactName");

		if (student_contactName != null) {
			setStudent_contactName(student_contactName);
		}

		String student_contactRelationship = (String)attributes.get(
				"student_contactRelationship");

		if (student_contactRelationship != null) {
			setStudent_contactRelationship(student_contactRelationship);
		}

		String student_contactPhoneNumber = (String)attributes.get(
				"student_contactPhoneNumber");

		if (student_contactPhoneNumber != null) {
			setStudent_contactPhoneNumber(student_contactPhoneNumber);
		}

		String student_contactEmail = (String)attributes.get(
				"student_contactEmail");

		if (student_contactEmail != null) {
			setStudent_contactEmail(student_contactEmail);
		}

		String student_howToKnowBM = (String)attributes.get(
				"student_howToKnowBM");

		if (student_howToKnowBM != null) {
			setStudent_howToKnowBM(student_howToKnowBM);
		}

		String student_whoIntroduce = (String)attributes.get(
				"student_whoIntroduce");

		if (student_whoIntroduce != null) {
			setStudent_whoIntroduce(student_whoIntroduce);
		}

		String student_anyConfuse = (String)attributes.get("student_anyConfuse");

		if (student_anyConfuse != null) {
			setStudent_anyConfuse(student_anyConfuse);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date created_date = (Date)attributes.get("created_date");

		if (created_date != null) {
			setCreated_date(created_date);
		}

		Date modified_date = (Date)attributes.get("modified_date");

		if (modified_date != null) {
			setModified_date(modified_date);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}
	}

	public String getStudent_id() {
		if (_student_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_id;
		}
	}

	public void setStudent_id(String student_id) {
		_student_id = student_id;
	}

	public String getStudent_name() {
		if (_student_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_name;
		}
	}

	public void setStudent_name(String student_name) {
		_student_name = student_name;
	}

	public String getStudent_sex() {
		if (_student_sex == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_sex;
		}
	}

	public void setStudent_sex(String student_sex) {
		_student_sex = student_sex;
	}

	public String getStudent_dob() {
		if (_student_dob == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_dob;
		}
	}

	public void setStudent_dob(String student_dob) {
		_student_dob = student_dob;
	}

	public String getStudent_placeOfBirth() {
		if (_student_placeOfBirth == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_placeOfBirth;
		}
	}

	public void setStudent_placeOfBirth(String student_placeOfBirth) {
		_student_placeOfBirth = student_placeOfBirth;
	}

	public String getStudent_nationality() {
		if (_student_nationality == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_nationality;
		}
	}

	public void setStudent_nationality(String student_nationality) {
		_student_nationality = student_nationality;
	}

	public String getStudent_phoneNumber() {
		if (_student_phoneNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_phoneNumber;
		}
	}

	public void setStudent_phoneNumber(String student_phoneNumber) {
		_student_phoneNumber = student_phoneNumber;
	}

	public String getStudent_address() {
		if (_student_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_address;
		}
	}

	public void setStudent_address(String student_address) {
		_student_address = student_address;
	}

	public String getStudent_heatlhStatus() {
		if (_student_heatlhStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_heatlhStatus;
		}
	}

	public void setStudent_heatlhStatus(String student_heatlhStatus) {
		_student_heatlhStatus = student_heatlhStatus;
	}

	public String getStudent_height() {
		if (_student_height == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_height;
		}
	}

	public void setStudent_height(String student_height) {
		_student_height = student_height;
	}

	public String getStudent_weight() {
		if (_student_weight == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_weight;
		}
	}

	public void setStudent_weight(String student_weight) {
		_student_weight = student_weight;
	}

	public String getStudent_contactName() {
		if (_student_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_contactName;
		}
	}

	public void setStudent_contactName(String student_contactName) {
		_student_contactName = student_contactName;
	}

	public String getStudent_contactRelationship() {
		if (_student_contactRelationship == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_contactRelationship;
		}
	}

	public void setStudent_contactRelationship(
		String student_contactRelationship) {
		_student_contactRelationship = student_contactRelationship;
	}

	public String getStudent_contactPhoneNumber() {
		if (_student_contactPhoneNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_contactPhoneNumber;
		}
	}

	public void setStudent_contactPhoneNumber(String student_contactPhoneNumber) {
		_student_contactPhoneNumber = student_contactPhoneNumber;
	}

	public String getStudent_contactEmail() {
		if (_student_contactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_contactEmail;
		}
	}

	public void setStudent_contactEmail(String student_contactEmail) {
		_student_contactEmail = student_contactEmail;
	}

	public String getStudent_howToKnowBM() {
		if (_student_howToKnowBM == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_howToKnowBM;
		}
	}

	public void setStudent_howToKnowBM(String student_howToKnowBM) {
		_student_howToKnowBM = student_howToKnowBM;
	}

	public String getStudent_whoIntroduce() {
		if (_student_whoIntroduce == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_whoIntroduce;
		}
	}

	public void setStudent_whoIntroduce(String student_whoIntroduce) {
		_student_whoIntroduce = student_whoIntroduce;
	}

	public String getStudent_anyConfuse() {
		if (_student_anyConfuse == null) {
			return StringPool.BLANK;
		}
		else {
			return _student_anyConfuse;
		}
	}

	public void setStudent_anyConfuse(String student_anyConfuse) {
		_student_anyConfuse = student_anyConfuse;
	}

	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	public void setStatus(String status) {
		_status = status;
	}

	public Date getCreated_date() {
		return _created_date;
	}

	public void setCreated_date(Date created_date) {
		_created_date = created_date;
	}

	public Date getModified_date() {
		return _modified_date;
	}

	public void setModified_date(Date modified_date) {
		_modified_date = modified_date;
	}

	public boolean getDeleted() {
		return _deleted;
	}

	public boolean isDeleted() {
		return _deleted;
	}

	public void setDeleted(boolean deleted) {
		_deleted = deleted;
	}

	@Override
	public PreschoolStudent toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (PreschoolStudent)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		PreschoolStudentImpl preschoolStudentImpl = new PreschoolStudentImpl();

		preschoolStudentImpl.setStudent_id(getStudent_id());
		preschoolStudentImpl.setStudent_name(getStudent_name());
		preschoolStudentImpl.setStudent_sex(getStudent_sex());
		preschoolStudentImpl.setStudent_dob(getStudent_dob());
		preschoolStudentImpl.setStudent_placeOfBirth(getStudent_placeOfBirth());
		preschoolStudentImpl.setStudent_nationality(getStudent_nationality());
		preschoolStudentImpl.setStudent_phoneNumber(getStudent_phoneNumber());
		preschoolStudentImpl.setStudent_address(getStudent_address());
		preschoolStudentImpl.setStudent_heatlhStatus(getStudent_heatlhStatus());
		preschoolStudentImpl.setStudent_height(getStudent_height());
		preschoolStudentImpl.setStudent_weight(getStudent_weight());
		preschoolStudentImpl.setStudent_contactName(getStudent_contactName());
		preschoolStudentImpl.setStudent_contactRelationship(getStudent_contactRelationship());
		preschoolStudentImpl.setStudent_contactPhoneNumber(getStudent_contactPhoneNumber());
		preschoolStudentImpl.setStudent_contactEmail(getStudent_contactEmail());
		preschoolStudentImpl.setStudent_howToKnowBM(getStudent_howToKnowBM());
		preschoolStudentImpl.setStudent_whoIntroduce(getStudent_whoIntroduce());
		preschoolStudentImpl.setStudent_anyConfuse(getStudent_anyConfuse());
		preschoolStudentImpl.setStatus(getStatus());
		preschoolStudentImpl.setCreated_date(getCreated_date());
		preschoolStudentImpl.setModified_date(getModified_date());
		preschoolStudentImpl.setDeleted(getDeleted());

		preschoolStudentImpl.resetOriginalValues();

		return preschoolStudentImpl;
	}

	public int compareTo(PreschoolStudent preschoolStudent) {
		String primaryKey = preschoolStudent.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		PreschoolStudent preschoolStudent = null;

		try {
			preschoolStudent = (PreschoolStudent)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String primaryKey = preschoolStudent.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<PreschoolStudent> toCacheModel() {
		PreschoolStudentCacheModel preschoolStudentCacheModel = new PreschoolStudentCacheModel();

		preschoolStudentCacheModel.student_id = getStudent_id();

		String student_id = preschoolStudentCacheModel.student_id;

		if ((student_id != null) && (student_id.length() == 0)) {
			preschoolStudentCacheModel.student_id = null;
		}

		preschoolStudentCacheModel.student_name = getStudent_name();

		String student_name = preschoolStudentCacheModel.student_name;

		if ((student_name != null) && (student_name.length() == 0)) {
			preschoolStudentCacheModel.student_name = null;
		}

		preschoolStudentCacheModel.student_sex = getStudent_sex();

		String student_sex = preschoolStudentCacheModel.student_sex;

		if ((student_sex != null) && (student_sex.length() == 0)) {
			preschoolStudentCacheModel.student_sex = null;
		}

		preschoolStudentCacheModel.student_dob = getStudent_dob();

		String student_dob = preschoolStudentCacheModel.student_dob;

		if ((student_dob != null) && (student_dob.length() == 0)) {
			preschoolStudentCacheModel.student_dob = null;
		}

		preschoolStudentCacheModel.student_placeOfBirth = getStudent_placeOfBirth();

		String student_placeOfBirth = preschoolStudentCacheModel.student_placeOfBirth;

		if ((student_placeOfBirth != null) &&
				(student_placeOfBirth.length() == 0)) {
			preschoolStudentCacheModel.student_placeOfBirth = null;
		}

		preschoolStudentCacheModel.student_nationality = getStudent_nationality();

		String student_nationality = preschoolStudentCacheModel.student_nationality;

		if ((student_nationality != null) &&
				(student_nationality.length() == 0)) {
			preschoolStudentCacheModel.student_nationality = null;
		}

		preschoolStudentCacheModel.student_phoneNumber = getStudent_phoneNumber();

		String student_phoneNumber = preschoolStudentCacheModel.student_phoneNumber;

		if ((student_phoneNumber != null) &&
				(student_phoneNumber.length() == 0)) {
			preschoolStudentCacheModel.student_phoneNumber = null;
		}

		preschoolStudentCacheModel.student_address = getStudent_address();

		String student_address = preschoolStudentCacheModel.student_address;

		if ((student_address != null) && (student_address.length() == 0)) {
			preschoolStudentCacheModel.student_address = null;
		}

		preschoolStudentCacheModel.student_heatlhStatus = getStudent_heatlhStatus();

		String student_heatlhStatus = preschoolStudentCacheModel.student_heatlhStatus;

		if ((student_heatlhStatus != null) &&
				(student_heatlhStatus.length() == 0)) {
			preschoolStudentCacheModel.student_heatlhStatus = null;
		}

		preschoolStudentCacheModel.student_height = getStudent_height();

		String student_height = preschoolStudentCacheModel.student_height;

		if ((student_height != null) && (student_height.length() == 0)) {
			preschoolStudentCacheModel.student_height = null;
		}

		preschoolStudentCacheModel.student_weight = getStudent_weight();

		String student_weight = preschoolStudentCacheModel.student_weight;

		if ((student_weight != null) && (student_weight.length() == 0)) {
			preschoolStudentCacheModel.student_weight = null;
		}

		preschoolStudentCacheModel.student_contactName = getStudent_contactName();

		String student_contactName = preschoolStudentCacheModel.student_contactName;

		if ((student_contactName != null) &&
				(student_contactName.length() == 0)) {
			preschoolStudentCacheModel.student_contactName = null;
		}

		preschoolStudentCacheModel.student_contactRelationship = getStudent_contactRelationship();

		String student_contactRelationship = preschoolStudentCacheModel.student_contactRelationship;

		if ((student_contactRelationship != null) &&
				(student_contactRelationship.length() == 0)) {
			preschoolStudentCacheModel.student_contactRelationship = null;
		}

		preschoolStudentCacheModel.student_contactPhoneNumber = getStudent_contactPhoneNumber();

		String student_contactPhoneNumber = preschoolStudentCacheModel.student_contactPhoneNumber;

		if ((student_contactPhoneNumber != null) &&
				(student_contactPhoneNumber.length() == 0)) {
			preschoolStudentCacheModel.student_contactPhoneNumber = null;
		}

		preschoolStudentCacheModel.student_contactEmail = getStudent_contactEmail();

		String student_contactEmail = preschoolStudentCacheModel.student_contactEmail;

		if ((student_contactEmail != null) &&
				(student_contactEmail.length() == 0)) {
			preschoolStudentCacheModel.student_contactEmail = null;
		}

		preschoolStudentCacheModel.student_howToKnowBM = getStudent_howToKnowBM();

		String student_howToKnowBM = preschoolStudentCacheModel.student_howToKnowBM;

		if ((student_howToKnowBM != null) &&
				(student_howToKnowBM.length() == 0)) {
			preschoolStudentCacheModel.student_howToKnowBM = null;
		}

		preschoolStudentCacheModel.student_whoIntroduce = getStudent_whoIntroduce();

		String student_whoIntroduce = preschoolStudentCacheModel.student_whoIntroduce;

		if ((student_whoIntroduce != null) &&
				(student_whoIntroduce.length() == 0)) {
			preschoolStudentCacheModel.student_whoIntroduce = null;
		}

		preschoolStudentCacheModel.student_anyConfuse = getStudent_anyConfuse();

		String student_anyConfuse = preschoolStudentCacheModel.student_anyConfuse;

		if ((student_anyConfuse != null) && (student_anyConfuse.length() == 0)) {
			preschoolStudentCacheModel.student_anyConfuse = null;
		}

		preschoolStudentCacheModel.status = getStatus();

		String status = preschoolStudentCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			preschoolStudentCacheModel.status = null;
		}

		Date created_date = getCreated_date();

		if (created_date != null) {
			preschoolStudentCacheModel.created_date = created_date.getTime();
		}
		else {
			preschoolStudentCacheModel.created_date = Long.MIN_VALUE;
		}

		Date modified_date = getModified_date();

		if (modified_date != null) {
			preschoolStudentCacheModel.modified_date = modified_date.getTime();
		}
		else {
			preschoolStudentCacheModel.modified_date = Long.MIN_VALUE;
		}

		preschoolStudentCacheModel.deleted = getDeleted();

		return preschoolStudentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{student_id=");
		sb.append(getStudent_id());
		sb.append(", student_name=");
		sb.append(getStudent_name());
		sb.append(", student_sex=");
		sb.append(getStudent_sex());
		sb.append(", student_dob=");
		sb.append(getStudent_dob());
		sb.append(", student_placeOfBirth=");
		sb.append(getStudent_placeOfBirth());
		sb.append(", student_nationality=");
		sb.append(getStudent_nationality());
		sb.append(", student_phoneNumber=");
		sb.append(getStudent_phoneNumber());
		sb.append(", student_address=");
		sb.append(getStudent_address());
		sb.append(", student_heatlhStatus=");
		sb.append(getStudent_heatlhStatus());
		sb.append(", student_height=");
		sb.append(getStudent_height());
		sb.append(", student_weight=");
		sb.append(getStudent_weight());
		sb.append(", student_contactName=");
		sb.append(getStudent_contactName());
		sb.append(", student_contactRelationship=");
		sb.append(getStudent_contactRelationship());
		sb.append(", student_contactPhoneNumber=");
		sb.append(getStudent_contactPhoneNumber());
		sb.append(", student_contactEmail=");
		sb.append(getStudent_contactEmail());
		sb.append(", student_howToKnowBM=");
		sb.append(getStudent_howToKnowBM());
		sb.append(", student_whoIntroduce=");
		sb.append(getStudent_whoIntroduce());
		sb.append(", student_anyConfuse=");
		sb.append(getStudent_anyConfuse());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", created_date=");
		sb.append(getCreated_date());
		sb.append(", modified_date=");
		sb.append(getModified_date());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.fsoft.bn.model.PreschoolStudent");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>student_id</column-name><column-value><![CDATA[");
		sb.append(getStudent_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_name</column-name><column-value><![CDATA[");
		sb.append(getStudent_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_sex</column-name><column-value><![CDATA[");
		sb.append(getStudent_sex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_dob</column-name><column-value><![CDATA[");
		sb.append(getStudent_dob());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_placeOfBirth</column-name><column-value><![CDATA[");
		sb.append(getStudent_placeOfBirth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_nationality</column-name><column-value><![CDATA[");
		sb.append(getStudent_nationality());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_phoneNumber</column-name><column-value><![CDATA[");
		sb.append(getStudent_phoneNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_address</column-name><column-value><![CDATA[");
		sb.append(getStudent_address());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_heatlhStatus</column-name><column-value><![CDATA[");
		sb.append(getStudent_heatlhStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_height</column-name><column-value><![CDATA[");
		sb.append(getStudent_height());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_weight</column-name><column-value><![CDATA[");
		sb.append(getStudent_weight());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_contactName</column-name><column-value><![CDATA[");
		sb.append(getStudent_contactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_contactRelationship</column-name><column-value><![CDATA[");
		sb.append(getStudent_contactRelationship());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_contactPhoneNumber</column-name><column-value><![CDATA[");
		sb.append(getStudent_contactPhoneNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_contactEmail</column-name><column-value><![CDATA[");
		sb.append(getStudent_contactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_howToKnowBM</column-name><column-value><![CDATA[");
		sb.append(getStudent_howToKnowBM());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_whoIntroduce</column-name><column-value><![CDATA[");
		sb.append(getStudent_whoIntroduce());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>student_anyConfuse</column-name><column-value><![CDATA[");
		sb.append(getStudent_anyConfuse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>created_date</column-name><column-value><![CDATA[");
		sb.append(getCreated_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modified_date</column-name><column-value><![CDATA[");
		sb.append(getModified_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PreschoolStudent.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			PreschoolStudent.class
		};
	private String _student_id;
	private String _student_name;
	private String _student_sex;
	private String _student_dob;
	private String _student_placeOfBirth;
	private String _student_nationality;
	private String _student_phoneNumber;
	private String _student_address;
	private String _student_heatlhStatus;
	private String _student_height;
	private String _student_weight;
	private String _student_contactName;
	private String _student_contactRelationship;
	private String _student_contactPhoneNumber;
	private String _student_contactEmail;
	private String _student_howToKnowBM;
	private String _student_whoIntroduce;
	private String _student_anyConfuse;
	private String _status;
	private Date _created_date;
	private Date _modified_date;
	private boolean _deleted;
	private PreschoolStudent _escapedModelProxy;
}