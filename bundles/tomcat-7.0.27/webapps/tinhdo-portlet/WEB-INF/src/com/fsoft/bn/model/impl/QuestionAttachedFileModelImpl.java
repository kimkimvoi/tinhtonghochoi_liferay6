/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fsoft.bn.model.impl;

import com.fsoft.bn.model.QuestionAttachedFile;
import com.fsoft.bn.model.QuestionAttachedFileModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the QuestionAttachedFile service. Represents a row in the &quot;BN_QuestionAttachedFile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.fsoft.bn.model.QuestionAttachedFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QuestionAttachedFileImpl}.
 * </p>
 *
 * @author FSOFT
 * @see QuestionAttachedFileImpl
 * @see com.fsoft.bn.model.QuestionAttachedFile
 * @see com.fsoft.bn.model.QuestionAttachedFileModel
 * @generated
 */
public class QuestionAttachedFileModelImpl extends BaseModelImpl<QuestionAttachedFile>
	implements QuestionAttachedFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a question attached file model instance should use the {@link com.fsoft.bn.model.QuestionAttachedFile} interface instead.
	 */
	public static final String TABLE_NAME = "BN_QuestionAttachedFile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "question_attached_id", Types.VARCHAR },
			{ "question_id", Types.VARCHAR },
			{ "attached_file_id", Types.VARCHAR },
			{ "created_date", Types.TIMESTAMP },
			{ "modified_date", Types.TIMESTAMP },
			{ "deleted", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table BN_QuestionAttachedFile (question_attached_id VARCHAR(75) not null primary key,question_id VARCHAR(75) null,attached_file_id VARCHAR(75) null,created_date DATE null,modified_date DATE null,deleted BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table BN_QuestionAttachedFile";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fsoft.bn.model.QuestionAttachedFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fsoft.bn.model.QuestionAttachedFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.fsoft.bn.model.QuestionAttachedFile"));

	public QuestionAttachedFileModelImpl() {
	}

	public String getPrimaryKey() {
		return _question_attached_id;
	}

	public void setPrimaryKey(String primaryKey) {
		setQuestion_attached_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return _question_attached_id;
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	public Class<?> getModelClass() {
		return QuestionAttachedFile.class;
	}

	public String getModelClassName() {
		return QuestionAttachedFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("question_attached_id", getQuestion_attached_id());
		attributes.put("question_id", getQuestion_id());
		attributes.put("attached_file_id", getAttached_file_id());
		attributes.put("created_date", getCreated_date());
		attributes.put("modified_date", getModified_date());
		attributes.put("deleted", getDeleted());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String question_attached_id = (String)attributes.get(
				"question_attached_id");

		if (question_attached_id != null) {
			setQuestion_attached_id(question_attached_id);
		}

		String question_id = (String)attributes.get("question_id");

		if (question_id != null) {
			setQuestion_id(question_id);
		}

		String attached_file_id = (String)attributes.get("attached_file_id");

		if (attached_file_id != null) {
			setAttached_file_id(attached_file_id);
		}

		Date created_date = (Date)attributes.get("created_date");

		if (created_date != null) {
			setCreated_date(created_date);
		}

		Date modified_date = (Date)attributes.get("modified_date");

		if (modified_date != null) {
			setModified_date(modified_date);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}
	}

	public String getQuestion_attached_id() {
		if (_question_attached_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _question_attached_id;
		}
	}

	public void setQuestion_attached_id(String question_attached_id) {
		_question_attached_id = question_attached_id;
	}

	public String getQuestion_id() {
		if (_question_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _question_id;
		}
	}

	public void setQuestion_id(String question_id) {
		_question_id = question_id;
	}

	public String getAttached_file_id() {
		if (_attached_file_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _attached_file_id;
		}
	}

	public void setAttached_file_id(String attached_file_id) {
		_attached_file_id = attached_file_id;
	}

	public Date getCreated_date() {
		return _created_date;
	}

	public void setCreated_date(Date created_date) {
		_created_date = created_date;
	}

	public Date getModified_date() {
		return _modified_date;
	}

	public void setModified_date(Date modified_date) {
		_modified_date = modified_date;
	}

	public boolean getDeleted() {
		return _deleted;
	}

	public boolean isDeleted() {
		return _deleted;
	}

	public void setDeleted(boolean deleted) {
		_deleted = deleted;
	}

	@Override
	public QuestionAttachedFile toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (QuestionAttachedFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		QuestionAttachedFileImpl questionAttachedFileImpl = new QuestionAttachedFileImpl();

		questionAttachedFileImpl.setQuestion_attached_id(getQuestion_attached_id());
		questionAttachedFileImpl.setQuestion_id(getQuestion_id());
		questionAttachedFileImpl.setAttached_file_id(getAttached_file_id());
		questionAttachedFileImpl.setCreated_date(getCreated_date());
		questionAttachedFileImpl.setModified_date(getModified_date());
		questionAttachedFileImpl.setDeleted(getDeleted());

		questionAttachedFileImpl.resetOriginalValues();

		return questionAttachedFileImpl;
	}

	public int compareTo(QuestionAttachedFile questionAttachedFile) {
		String primaryKey = questionAttachedFile.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		QuestionAttachedFile questionAttachedFile = null;

		try {
			questionAttachedFile = (QuestionAttachedFile)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		String primaryKey = questionAttachedFile.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<QuestionAttachedFile> toCacheModel() {
		QuestionAttachedFileCacheModel questionAttachedFileCacheModel = new QuestionAttachedFileCacheModel();

		questionAttachedFileCacheModel.question_attached_id = getQuestion_attached_id();

		String question_attached_id = questionAttachedFileCacheModel.question_attached_id;

		if ((question_attached_id != null) &&
				(question_attached_id.length() == 0)) {
			questionAttachedFileCacheModel.question_attached_id = null;
		}

		questionAttachedFileCacheModel.question_id = getQuestion_id();

		String question_id = questionAttachedFileCacheModel.question_id;

		if ((question_id != null) && (question_id.length() == 0)) {
			questionAttachedFileCacheModel.question_id = null;
		}

		questionAttachedFileCacheModel.attached_file_id = getAttached_file_id();

		String attached_file_id = questionAttachedFileCacheModel.attached_file_id;

		if ((attached_file_id != null) && (attached_file_id.length() == 0)) {
			questionAttachedFileCacheModel.attached_file_id = null;
		}

		Date created_date = getCreated_date();

		if (created_date != null) {
			questionAttachedFileCacheModel.created_date = created_date.getTime();
		}
		else {
			questionAttachedFileCacheModel.created_date = Long.MIN_VALUE;
		}

		Date modified_date = getModified_date();

		if (modified_date != null) {
			questionAttachedFileCacheModel.modified_date = modified_date.getTime();
		}
		else {
			questionAttachedFileCacheModel.modified_date = Long.MIN_VALUE;
		}

		questionAttachedFileCacheModel.deleted = getDeleted();

		return questionAttachedFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{question_attached_id=");
		sb.append(getQuestion_attached_id());
		sb.append(", question_id=");
		sb.append(getQuestion_id());
		sb.append(", attached_file_id=");
		sb.append(getAttached_file_id());
		sb.append(", created_date=");
		sb.append(getCreated_date());
		sb.append(", modified_date=");
		sb.append(getModified_date());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.fsoft.bn.model.QuestionAttachedFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>question_attached_id</column-name><column-value><![CDATA[");
		sb.append(getQuestion_attached_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>question_id</column-name><column-value><![CDATA[");
		sb.append(getQuestion_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attached_file_id</column-name><column-value><![CDATA[");
		sb.append(getAttached_file_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>created_date</column-name><column-value><![CDATA[");
		sb.append(getCreated_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modified_date</column-name><column-value><![CDATA[");
		sb.append(getModified_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = QuestionAttachedFile.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			QuestionAttachedFile.class
		};
	private String _question_attached_id;
	private String _question_id;
	private String _attached_file_id;
	private Date _created_date;
	private Date _modified_date;
	private boolean _deleted;
	private QuestionAttachedFile _escapedModelProxy;
}