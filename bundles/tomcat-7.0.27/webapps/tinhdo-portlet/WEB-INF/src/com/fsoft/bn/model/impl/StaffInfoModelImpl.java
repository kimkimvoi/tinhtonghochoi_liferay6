/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fsoft.bn.model.impl;

import com.fsoft.bn.model.StaffInfo;
import com.fsoft.bn.model.StaffInfoModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the StaffInfo service. Represents a row in the &quot;BN_StaffInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.fsoft.bn.model.StaffInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StaffInfoImpl}.
 * </p>
 *
 * @author FSOFT
 * @see StaffInfoImpl
 * @see com.fsoft.bn.model.StaffInfo
 * @see com.fsoft.bn.model.StaffInfoModel
 * @generated
 */
public class StaffInfoModelImpl extends BaseModelImpl<StaffInfo>
	implements StaffInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a staff info model instance should use the {@link com.fsoft.bn.model.StaffInfo} interface instead.
	 */
	public static final String TABLE_NAME = "BN_StaffInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "staff_id", Types.BIGINT },
			{ "staff_firstname", Types.VARCHAR },
			{ "staff_middlename", Types.VARCHAR },
			{ "staff_lastname", Types.VARCHAR },
			{ "staff_birthday", Types.TIMESTAMP },
			{ "staff_phone", Types.VARCHAR },
			{ "staff_email", Types.VARCHAR },
			{ "staff_sex", Types.VARCHAR },
			{ "staff_role", Types.VARCHAR },
			{ "deleted", Types.BOOLEAN },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizations_id", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table BN_StaffInfo (staff_id LONG not null primary key,staff_firstname VARCHAR(255) null,staff_middlename VARCHAR(255) null,staff_lastname VARCHAR(255) null,staff_birthday DATE null,staff_phone VARCHAR(75) null,staff_email VARCHAR(255) null,staff_sex VARCHAR(75) null,staff_role VARCHAR(75) null,deleted BOOLEAN,createDate DATE null,modifiedDate DATE null,organizations_id LONG)";
	public static final String TABLE_SQL_DROP = "drop table BN_StaffInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY staffInfo.staff_id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BN_StaffInfo.staff_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fsoft.bn.model.StaffInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fsoft.bn.model.StaffInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fsoft.bn.model.StaffInfo"),
			true);
	public static long DELETED_COLUMN_BITMASK = 1L;
	public static long STAFF_EMAIL_COLUMN_BITMASK = 2L;
	public static long STAFF_FIRSTNAME_COLUMN_BITMASK = 4L;
	public static long STAFF_LASTNAME_COLUMN_BITMASK = 8L;
	public static long STAFF_MIDDLENAME_COLUMN_BITMASK = 16L;
	public static long STAFF_PHONE_COLUMN_BITMASK = 32L;
	public static long STAFF_ROLE_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.fsoft.bn.model.StaffInfo"));

	public StaffInfoModelImpl() {
	}

	public long getPrimaryKey() {
		return _staff_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setStaff_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_staff_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return StaffInfo.class;
	}

	public String getModelClassName() {
		return StaffInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("staff_id", getStaff_id());
		attributes.put("staff_firstname", getStaff_firstname());
		attributes.put("staff_middlename", getStaff_middlename());
		attributes.put("staff_lastname", getStaff_lastname());
		attributes.put("staff_birthday", getStaff_birthday());
		attributes.put("staff_phone", getStaff_phone());
		attributes.put("staff_email", getStaff_email());
		attributes.put("staff_sex", getStaff_sex());
		attributes.put("staff_role", getStaff_role());
		attributes.put("deleted", getDeleted());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizations_id", getOrganizations_id());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long staff_id = (Long)attributes.get("staff_id");

		if (staff_id != null) {
			setStaff_id(staff_id);
		}

		String staff_firstname = (String)attributes.get("staff_firstname");

		if (staff_firstname != null) {
			setStaff_firstname(staff_firstname);
		}

		String staff_middlename = (String)attributes.get("staff_middlename");

		if (staff_middlename != null) {
			setStaff_middlename(staff_middlename);
		}

		String staff_lastname = (String)attributes.get("staff_lastname");

		if (staff_lastname != null) {
			setStaff_lastname(staff_lastname);
		}

		Date staff_birthday = (Date)attributes.get("staff_birthday");

		if (staff_birthday != null) {
			setStaff_birthday(staff_birthday);
		}

		String staff_phone = (String)attributes.get("staff_phone");

		if (staff_phone != null) {
			setStaff_phone(staff_phone);
		}

		String staff_email = (String)attributes.get("staff_email");

		if (staff_email != null) {
			setStaff_email(staff_email);
		}

		String staff_sex = (String)attributes.get("staff_sex");

		if (staff_sex != null) {
			setStaff_sex(staff_sex);
		}

		String staff_role = (String)attributes.get("staff_role");

		if (staff_role != null) {
			setStaff_role(staff_role);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long organizations_id = (Long)attributes.get("organizations_id");

		if (organizations_id != null) {
			setOrganizations_id(organizations_id);
		}
	}

	public long getStaff_id() {
		return _staff_id;
	}

	public void setStaff_id(long staff_id) {
		_columnBitmask = -1L;

		_staff_id = staff_id;
	}

	public String getStaff_firstname() {
		if (_staff_firstname == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_firstname;
		}
	}

	public void setStaff_firstname(String staff_firstname) {
		_columnBitmask |= STAFF_FIRSTNAME_COLUMN_BITMASK;

		if (_originalStaff_firstname == null) {
			_originalStaff_firstname = _staff_firstname;
		}

		_staff_firstname = staff_firstname;
	}

	public String getOriginalStaff_firstname() {
		return GetterUtil.getString(_originalStaff_firstname);
	}

	public String getStaff_middlename() {
		if (_staff_middlename == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_middlename;
		}
	}

	public void setStaff_middlename(String staff_middlename) {
		_columnBitmask |= STAFF_MIDDLENAME_COLUMN_BITMASK;

		if (_originalStaff_middlename == null) {
			_originalStaff_middlename = _staff_middlename;
		}

		_staff_middlename = staff_middlename;
	}

	public String getOriginalStaff_middlename() {
		return GetterUtil.getString(_originalStaff_middlename);
	}

	public String getStaff_lastname() {
		if (_staff_lastname == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_lastname;
		}
	}

	public void setStaff_lastname(String staff_lastname) {
		_columnBitmask |= STAFF_LASTNAME_COLUMN_BITMASK;

		if (_originalStaff_lastname == null) {
			_originalStaff_lastname = _staff_lastname;
		}

		_staff_lastname = staff_lastname;
	}

	public String getOriginalStaff_lastname() {
		return GetterUtil.getString(_originalStaff_lastname);
	}

	public Date getStaff_birthday() {
		return _staff_birthday;
	}

	public void setStaff_birthday(Date staff_birthday) {
		_staff_birthday = staff_birthday;
	}

	public String getStaff_phone() {
		if (_staff_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_phone;
		}
	}

	public void setStaff_phone(String staff_phone) {
		_columnBitmask |= STAFF_PHONE_COLUMN_BITMASK;

		if (_originalStaff_phone == null) {
			_originalStaff_phone = _staff_phone;
		}

		_staff_phone = staff_phone;
	}

	public String getOriginalStaff_phone() {
		return GetterUtil.getString(_originalStaff_phone);
	}

	public String getStaff_email() {
		if (_staff_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_email;
		}
	}

	public void setStaff_email(String staff_email) {
		_columnBitmask |= STAFF_EMAIL_COLUMN_BITMASK;

		if (_originalStaff_email == null) {
			_originalStaff_email = _staff_email;
		}

		_staff_email = staff_email;
	}

	public String getOriginalStaff_email() {
		return GetterUtil.getString(_originalStaff_email);
	}

	public String getStaff_sex() {
		if (_staff_sex == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_sex;
		}
	}

	public void setStaff_sex(String staff_sex) {
		_staff_sex = staff_sex;
	}

	public String getStaff_role() {
		if (_staff_role == null) {
			return StringPool.BLANK;
		}
		else {
			return _staff_role;
		}
	}

	public void setStaff_role(String staff_role) {
		_columnBitmask |= STAFF_ROLE_COLUMN_BITMASK;

		if (_originalStaff_role == null) {
			_originalStaff_role = _staff_role;
		}

		_staff_role = staff_role;
	}

	public String getOriginalStaff_role() {
		return GetterUtil.getString(_originalStaff_role);
	}

	public boolean getDeleted() {
		return _deleted;
	}

	public boolean isDeleted() {
		return _deleted;
	}

	public void setDeleted(boolean deleted) {
		_columnBitmask |= DELETED_COLUMN_BITMASK;

		if (!_setOriginalDeleted) {
			_setOriginalDeleted = true;

			_originalDeleted = _deleted;
		}

		_deleted = deleted;
	}

	public boolean getOriginalDeleted() {
		return _originalDeleted;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getOrganizations_id() {
		return _organizations_id;
	}

	public void setOrganizations_id(long organizations_id) {
		_organizations_id = organizations_id;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			StaffInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StaffInfo toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (StaffInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		StaffInfoImpl staffInfoImpl = new StaffInfoImpl();

		staffInfoImpl.setStaff_id(getStaff_id());
		staffInfoImpl.setStaff_firstname(getStaff_firstname());
		staffInfoImpl.setStaff_middlename(getStaff_middlename());
		staffInfoImpl.setStaff_lastname(getStaff_lastname());
		staffInfoImpl.setStaff_birthday(getStaff_birthday());
		staffInfoImpl.setStaff_phone(getStaff_phone());
		staffInfoImpl.setStaff_email(getStaff_email());
		staffInfoImpl.setStaff_sex(getStaff_sex());
		staffInfoImpl.setStaff_role(getStaff_role());
		staffInfoImpl.setDeleted(getDeleted());
		staffInfoImpl.setCreateDate(getCreateDate());
		staffInfoImpl.setModifiedDate(getModifiedDate());
		staffInfoImpl.setOrganizations_id(getOrganizations_id());

		staffInfoImpl.resetOriginalValues();

		return staffInfoImpl;
	}

	public int compareTo(StaffInfo staffInfo) {
		int value = 0;

		if (getStaff_id() < staffInfo.getStaff_id()) {
			value = -1;
		}
		else if (getStaff_id() > staffInfo.getStaff_id()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		StaffInfo staffInfo = null;

		try {
			staffInfo = (StaffInfo)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = staffInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		StaffInfoModelImpl staffInfoModelImpl = this;

		staffInfoModelImpl._originalStaff_firstname = staffInfoModelImpl._staff_firstname;

		staffInfoModelImpl._originalStaff_middlename = staffInfoModelImpl._staff_middlename;

		staffInfoModelImpl._originalStaff_lastname = staffInfoModelImpl._staff_lastname;

		staffInfoModelImpl._originalStaff_phone = staffInfoModelImpl._staff_phone;

		staffInfoModelImpl._originalStaff_email = staffInfoModelImpl._staff_email;

		staffInfoModelImpl._originalStaff_role = staffInfoModelImpl._staff_role;

		staffInfoModelImpl._originalDeleted = staffInfoModelImpl._deleted;

		staffInfoModelImpl._setOriginalDeleted = false;

		staffInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StaffInfo> toCacheModel() {
		StaffInfoCacheModel staffInfoCacheModel = new StaffInfoCacheModel();

		staffInfoCacheModel.staff_id = getStaff_id();

		staffInfoCacheModel.staff_firstname = getStaff_firstname();

		String staff_firstname = staffInfoCacheModel.staff_firstname;

		if ((staff_firstname != null) && (staff_firstname.length() == 0)) {
			staffInfoCacheModel.staff_firstname = null;
		}

		staffInfoCacheModel.staff_middlename = getStaff_middlename();

		String staff_middlename = staffInfoCacheModel.staff_middlename;

		if ((staff_middlename != null) && (staff_middlename.length() == 0)) {
			staffInfoCacheModel.staff_middlename = null;
		}

		staffInfoCacheModel.staff_lastname = getStaff_lastname();

		String staff_lastname = staffInfoCacheModel.staff_lastname;

		if ((staff_lastname != null) && (staff_lastname.length() == 0)) {
			staffInfoCacheModel.staff_lastname = null;
		}

		Date staff_birthday = getStaff_birthday();

		if (staff_birthday != null) {
			staffInfoCacheModel.staff_birthday = staff_birthday.getTime();
		}
		else {
			staffInfoCacheModel.staff_birthday = Long.MIN_VALUE;
		}

		staffInfoCacheModel.staff_phone = getStaff_phone();

		String staff_phone = staffInfoCacheModel.staff_phone;

		if ((staff_phone != null) && (staff_phone.length() == 0)) {
			staffInfoCacheModel.staff_phone = null;
		}

		staffInfoCacheModel.staff_email = getStaff_email();

		String staff_email = staffInfoCacheModel.staff_email;

		if ((staff_email != null) && (staff_email.length() == 0)) {
			staffInfoCacheModel.staff_email = null;
		}

		staffInfoCacheModel.staff_sex = getStaff_sex();

		String staff_sex = staffInfoCacheModel.staff_sex;

		if ((staff_sex != null) && (staff_sex.length() == 0)) {
			staffInfoCacheModel.staff_sex = null;
		}

		staffInfoCacheModel.staff_role = getStaff_role();

		String staff_role = staffInfoCacheModel.staff_role;

		if ((staff_role != null) && (staff_role.length() == 0)) {
			staffInfoCacheModel.staff_role = null;
		}

		staffInfoCacheModel.deleted = getDeleted();

		Date createDate = getCreateDate();

		if (createDate != null) {
			staffInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			staffInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			staffInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			staffInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		staffInfoCacheModel.organizations_id = getOrganizations_id();

		return staffInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{staff_id=");
		sb.append(getStaff_id());
		sb.append(", staff_firstname=");
		sb.append(getStaff_firstname());
		sb.append(", staff_middlename=");
		sb.append(getStaff_middlename());
		sb.append(", staff_lastname=");
		sb.append(getStaff_lastname());
		sb.append(", staff_birthday=");
		sb.append(getStaff_birthday());
		sb.append(", staff_phone=");
		sb.append(getStaff_phone());
		sb.append(", staff_email=");
		sb.append(getStaff_email());
		sb.append(", staff_sex=");
		sb.append(getStaff_sex());
		sb.append(", staff_role=");
		sb.append(getStaff_role());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizations_id=");
		sb.append(getOrganizations_id());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.fsoft.bn.model.StaffInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>staff_id</column-name><column-value><![CDATA[");
		sb.append(getStaff_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_firstname</column-name><column-value><![CDATA[");
		sb.append(getStaff_firstname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_middlename</column-name><column-value><![CDATA[");
		sb.append(getStaff_middlename());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_lastname</column-name><column-value><![CDATA[");
		sb.append(getStaff_lastname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_birthday</column-name><column-value><![CDATA[");
		sb.append(getStaff_birthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_phone</column-name><column-value><![CDATA[");
		sb.append(getStaff_phone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_email</column-name><column-value><![CDATA[");
		sb.append(getStaff_email());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_sex</column-name><column-value><![CDATA[");
		sb.append(getStaff_sex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_role</column-name><column-value><![CDATA[");
		sb.append(getStaff_role());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizations_id</column-name><column-value><![CDATA[");
		sb.append(getOrganizations_id());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StaffInfo.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			StaffInfo.class
		};
	private long _staff_id;
	private String _staff_firstname;
	private String _originalStaff_firstname;
	private String _staff_middlename;
	private String _originalStaff_middlename;
	private String _staff_lastname;
	private String _originalStaff_lastname;
	private Date _staff_birthday;
	private String _staff_phone;
	private String _originalStaff_phone;
	private String _staff_email;
	private String _originalStaff_email;
	private String _staff_sex;
	private String _staff_role;
	private String _originalStaff_role;
	private boolean _deleted;
	private boolean _originalDeleted;
	private boolean _setOriginalDeleted;
	private Date _createDate;
	private Date _modifiedDate;
	private long _organizations_id;
	private long _columnBitmask;
	private StaffInfo _escapedModelProxy;
}